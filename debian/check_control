#!/bin/sh
#
# This script will be automatically called by makeDdeb before the actual
# build process starts and so update some information based on the LIBNO
# file.
# If other (more direct) build tools are to be used you need to call this
# manually before initializing the build.
#
# In both cases you probably want to commit the changes this script did.

# Version 03.03.2025 (exclude suffix from package name (GUL only))
# Version 02.03.2025 (changelog check more robust)
# Version 19.02.2025 (fix sed command)
# Version 18.02.2025 (preserve other dependencies)
# Version 22.01.2025 (make calling pwd in dependent)
# Version 17.01.2025 (obsoletes check_changelog)

set -e

cd "$(dirname "$0")/.."

# LIBNO-file can contain "LIBNO = 24.1.1-oracular1" (The part after x.y.z is optional)
# VERSION contains dots: 24.1.2-oracular1
VERSION=$(sed -e "s/LIBNO\s*=\s*//g;s/\s\+$//" LIBNO )

# # LIBNO contains dashes: 24-1-2-oracular1
# LIBNO=$(echo "${VERSION}" | sed -e "s/\./-/g")

# LIBNO contains dashes and no suffix: 24-1-2
LIBNO=$(echo "${VERSION}" | sed -E "s/([0-9]+\.[0-9]+\.[0-9]+).*/\1/;s/\./-/g")

# LIBNAME contains the pure (package) name without version parts
LIBNAME=$(grep "^Source:" debian/control | sed 's/Source: *//;s/-[0-9].*$//')

# Check version number in control file
sed -i -e "s/${LIBNAME}-[^ ]*/${LIBNAME}-${LIBNO}/g" debian/control

# If LIBNO and version in debian/changelog differs: update
if ! head -n 1 debian/changelog | grep "${LIBNAME}-${LIBNO}" | grep "\(${VERSION}\)" ; then
    debchange \
        --controlmaint \
        --newversion="${VERSION}" \
        --package="${LIBNAME}-${LIBNO}" \
        --distribution=unstable \
        --urgency=low \
        "automatically added entry (by check_control)" \
        "$(test -f debian/changelog || echo --create)"
fi

# Create package content specification
rm -f "debian/${LIBNAME}-"[0-9]*.install
cp "debian/${LIBNAME}.install.in" "debian/${LIBNAME}-${LIBNO}.install"
